// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enums
enum SchulungsTyp {
  Grundlagen
  Fortgeschritten
  Wartung
  Individualschulung
}

enum SchulungsStatus {
  bestaetigt
  laufend
  abgeschlossen
  abgesagt
}

enum AnmeldungsStatus {
  reserviert
  gebucht
  storniert
}

enum BezahlStatus {
  offen
  bezahlt
  erstattet
}

enum ZertifikatStatus {
  aktiv
  widerrufen
  abgelaufen
}

enum RechnungsStatus {
  entwurf
  versendet
  bezahlt
  storniert
}

// Models
model Schulung {
  id              String           @id @default(cuid())
  titel           String
  beschreibung    String?          @db.Text
  typ             SchulungsTyp
  hersteller      String
  startDatum      DateTime
  endDatum        DateTime
  dauer           Int
  maxTeilnehmer   Int
  preis           Decimal          @db.Decimal(10, 2)
  status          SchulungsStatus  @default(bestaetigt)
  ort             String?
  raum            String?
  trainer         String?
  calendarEventId String?          @unique
  lastSyncedAt    DateTime?
  
  // Template-Referenz
  templateId      String?
  customContent   Json?
  
  anmeldungen     Anmeldung[]
  zertifikate     Zertifikat[]
  rechnungen      Rechnung[]
  pruefungen      Pruefung[]
  
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  
  @@index([startDatum])
  @@index([status])
  @@index([typ])
  @@index([hersteller])
}

model Teilnehmer {
  id          String   @id @default(cuid())
  vorname     String
  nachname    String
  email       String   @unique
  firma       String?
  telefon     String?
  strasse     String?
  plz         String?
  ort         String?
  
  // Roboterführerschein
  punktestand     Int      @default(0)
  gesamtstunden   Int      @default(0)
  ihkBerechtigt   Boolean  @default(false)
  
  anmeldungen     Anmeldung[]
  zertifikate     Zertifikat[]
  pruefungen      PruefungsTeilnahme[]
  rechnungen      Rechnung[]
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@index([email])
  @@index([nachname])
}

model Anmeldung {
  id            String            @id @default(cuid())
  schulungId    String
  teilnehmerId  String
  status        AnmeldungsStatus  @default(reserviert)
  anmeldedatum  DateTime          @default(now())
  bezahlstatus  BezahlStatus      @default(offen)
  
  // Provision
  vermittler       String?
  provisionRate    Decimal?         @db.Decimal(5, 2)
  provisionBezahlt Boolean          @default(false)
  
  schulung      Schulung   @relation(fields: [schulungId], references: [id], onDelete: Cascade)
  teilnehmer    Teilnehmer @relation(fields: [teilnehmerId], references: [id], onDelete: Cascade)
  
  @@unique([schulungId, teilnehmerId])
  @@index([status])
  @@index([anmeldedatum])
}

model Zertifikat {
  id                String           @id @default(cuid())
  schulungId        String
  teilnehmerId      String
  zertifikatsnummer String           @unique
  ausstellungsdatum DateTime         @default(now())
  gueltigBis        DateTime?
  status            ZertifikatStatus @default(aktiv)
  qrCode            String           @unique
  validierungsUrl   String
  
  // IHK Zertifikat
  ihkZertifikat     Boolean  @default(false)
  ihkNummer         String?
  ihkAusstelldatum  DateTime?
  
  schulung          Schulung   @relation(fields: [schulungId], references: [id], onDelete: Cascade)
  teilnehmer        Teilnehmer @relation(fields: [teilnehmerId], references: [id], onDelete: Cascade)
  
  @@unique([schulungId, teilnehmerId])
  @@index([zertifikatsnummer])
  @@index([qrCode])
  @@index([status])
}

model Rechnung {
  id              String          @id @default(cuid())
  rechnungsnummer String          @unique
  schulungId      String
  teilnehmerId    String
  betrag          Decimal         @db.Decimal(10, 2)
  mwst            Decimal         @db.Decimal(10, 2)
  
  // IHK Gebühren
  ihkGebuehr      Decimal?        @db.Decimal(10, 2) @default(0)
  
  status          RechnungsStatus @default(entwurf)
  faelligAm       DateTime
  bezahltAm       DateTime?
  
  // Rechnungsvorlage
  templateId      String?
  customFields    Json?
  
  schulung        Schulung   @relation(fields: [schulungId], references: [id], onDelete: Cascade)
  teilnehmer      Teilnehmer @relation(fields: [teilnehmerId], references: [id], onDelete: Cascade)
  
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  
  @@index([rechnungsnummer])
  @@index([status])
  @@index([faelligAm])
}

model Pruefung {
  id              String   @id @default(cuid())
  schulungId      String
  titel           String
  datum           DateTime
  dauer           Int
  mindestpunktzahl Int
  maxpunktzahl    Int
  
  // Fragenpool
  fragenTemplate  Json
  fragenpool      PruefungsFrage[]
  
  schulung        Schulung @relation(fields: [schulungId], references: [id], onDelete: Cascade)
  teilnahmen      PruefungsTeilnahme[]
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@index([datum])
}

model PruefungsFrage {
  id              String   @id @default(cuid())
  pruefungId      String
  kategorie       String
  frage           String   @db.Text
  antworten       Json
  richtigeAntwort String
  punkte          Int
  
  pruefung        Pruefung @relation(fields: [pruefungId], references: [id], onDelete: Cascade)
  
  @@index([kategorie])
}

model PruefungsTeilnahme {
  id              String   @id @default(cuid())
  pruefungId      String
  teilnehmerId    String
  datum           DateTime @default(now())
  
  // Ergebnisse
  antworten       Json
  erreichtePunkte Int
  bestanden       Boolean
  
  // Archivierung
  scanUrl         String?
  archivNummer    String?
  
  pruefung        Pruefung   @relation(fields: [pruefungId], references: [id], onDelete: Cascade)
  teilnehmer      Teilnehmer @relation(fields: [teilnehmerId], references: [id], onDelete: Cascade)
  
  @@unique([pruefungId, teilnehmerId])
  @@index([datum])
  @@index([bestanden])
}

model SchulungsTemplate {
  id              String   @id @default(cuid())
  name            String
  typ             String
  hersteller      String
  
  // Standard-Inhalte
  beschreibung    String   @db.Text
  lernziele       Json
  agenda          Json
  materialien     Json
  
  // Standard-Prüfungsfragen (optional)
  standardFragen  Json?
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@index([hersteller])
  @@index([typ])
}
